package org.bodsrisk.rdf.vocabulary

import org.eclipse.rdf4j.model.IRI
import org.rdf4k.iri
import org.rdf4k.namespace

object FTM {

    fun iri(id: String): IRI {
        return NAMESPACE.iri(id)
    }

    val NAMESPACE = "https://w3id.org/ftm#".namespace("ftm")

    val Address: IRI = NAMESPACE.iri("Address")
    val Address_city: IRI = NAMESPACE.iri("Address:city")
    val Address_country: IRI = NAMESPACE.iri("Address:country")
    val Address_full: IRI = NAMESPACE.iri("Address:full")
    val Address_googlePlaceId: IRI = NAMESPACE.iri("Address:googlePlaceId")
    val Address_latitude: IRI = NAMESPACE.iri("Address:latitude")
    val Address_longitude: IRI = NAMESPACE.iri("Address:longitude")
    val Address_osmId: IRI = NAMESPACE.iri("Address:osmId")
    val Address_postalCode: IRI = NAMESPACE.iri("Address:postalCode")
    val Address_postOfficeBox: IRI = NAMESPACE.iri("Address:postOfficeBox")
    val Address_region: IRI = NAMESPACE.iri("Address:region")
    val Address_remarks: IRI = NAMESPACE.iri("Address:remarks")
    val Address_state: IRI = NAMESPACE.iri("Address:state")
    val Address_street2: IRI = NAMESPACE.iri("Address:street2")
    val Address_street: IRI = NAMESPACE.iri("Address:street")
    val Address_things: IRI = NAMESPACE.iri("Address:things")
    val Address_tripsDeparting: IRI = NAMESPACE.iri("Address:tripsDeparting")
    val Address_tripsIncoming: IRI = NAMESPACE.iri("Address:tripsIncoming")
    val Airplane: IRI = NAMESPACE.iri("Airplane")
    val Airplane_icaoCode: IRI = NAMESPACE.iri("Airplane:icaoCode")
    val Airplane_manufacturer: IRI = NAMESPACE.iri("Airplane:manufacturer")
    val Airplane_serialNumber: IRI = NAMESPACE.iri("Airplane:serialNumber")
    val Analyzable: IRI = NAMESPACE.iri("Analyzable")
    val Analyzable_companiesMentioned: IRI = NAMESPACE.iri("Analyzable:companiesMentioned")
    val Analyzable_detectedCountry: IRI = NAMESPACE.iri("Analyzable:detectedCountry")
    val Analyzable_detectedLanguage: IRI = NAMESPACE.iri("Analyzable:detectedLanguage")
    val Analyzable_emailMentioned: IRI = NAMESPACE.iri("Analyzable:emailMentioned")
    val Analyzable_ibanMentioned: IRI = NAMESPACE.iri("Analyzable:ibanMentioned")
    val Analyzable_ipMentioned: IRI = NAMESPACE.iri("Analyzable:ipMentioned")
    val Analyzable_locationMentioned: IRI = NAMESPACE.iri("Analyzable:locationMentioned")
    val Analyzable_namesMentioned: IRI = NAMESPACE.iri("Analyzable:namesMentioned")
    val Analyzable_peopleMentioned: IRI = NAMESPACE.iri("Analyzable:peopleMentioned")
    val Analyzable_phoneMentioned: IRI = NAMESPACE.iri("Analyzable:phoneMentioned")
    val Article: IRI = NAMESPACE.iri("Article")
    val Assessment: IRI = NAMESPACE.iri("Assessment")
    val Assessment_assessmentId: IRI = NAMESPACE.iri("Assessment:assessmentId")
    val Assessment_author: IRI = NAMESPACE.iri("Assessment:author")
    val Assessment_publishDate: IRI = NAMESPACE.iri("Assessment:publishDate")
    val Asset: IRI = NAMESPACE.iri("Asset")
    val Asset_ownershipAsset: IRI = NAMESPACE.iri("Asset:ownershipAsset")
    val Associate: IRI = NAMESPACE.iri("Associate")
    val Associate_associate: IRI = NAMESPACE.iri("Associate:associate")
    val Associate_person: IRI = NAMESPACE.iri("Associate:person")
    val Associate_relationship: IRI = NAMESPACE.iri("Associate:relationship")
    val Audio: IRI = NAMESPACE.iri("Audio")
    val Audio_duration: IRI = NAMESPACE.iri("Audio:duration")
    val Audio_samplingRate: IRI = NAMESPACE.iri("Audio:samplingRate")
    val BankAccount: IRI = NAMESPACE.iri("BankAccount")
    val BankAccount_accountNumber: IRI = NAMESPACE.iri("BankAccount:accountNumber")
    val BankAccount_accountType: IRI = NAMESPACE.iri("BankAccount:accountType")
    val BankAccount_balance: IRI = NAMESPACE.iri("BankAccount:balance")
    val BankAccount_balanceDate: IRI = NAMESPACE.iri("BankAccount:balanceDate")
    val BankAccount_bank: IRI = NAMESPACE.iri("BankAccount:bank")
    val BankAccount_bankAddress: IRI = NAMESPACE.iri("BankAccount:bankAddress")
    val BankAccount_bankName: IRI = NAMESPACE.iri("BankAccount:bankName")
    val BankAccount_bic: IRI = NAMESPACE.iri("BankAccount:bic")
    val BankAccount_closingDate: IRI = NAMESPACE.iri("BankAccount:closingDate")
    val BankAccount_contractBankAccount: IRI = NAMESPACE.iri("BankAccount:contractBankAccount")
    val BankAccount_foreignBankAccount: IRI = NAMESPACE.iri("BankAccount:foreignBankAccount")
    val BankAccount_iban: IRI = NAMESPACE.iri("BankAccount:iban")
    val BankAccount_maxBalance: IRI = NAMESPACE.iri("BankAccount:maxBalance")
    val BankAccount_maxBalanceDate: IRI = NAMESPACE.iri("BankAccount:maxBalanceDate")
    val BankAccount_openingDate: IRI = NAMESPACE.iri("BankAccount:openingDate")
    val BankAccount_paymentBeneficiaryAccount: IRI = NAMESPACE.iri("BankAccount:paymentBeneficiaryAccount")
    val BankAccount_paymentPayerAccount: IRI = NAMESPACE.iri("BankAccount:paymentPayerAccount")
    val BankAccount_rubBankAccount: IRI = NAMESPACE.iri("BankAccount:rubBankAccount")
    val Call: IRI = NAMESPACE.iri("Call")
    val Call_caller: IRI = NAMESPACE.iri("Call:caller")
    val Call_callerNumber: IRI = NAMESPACE.iri("Call:callerNumber")
    val Call_duration: IRI = NAMESPACE.iri("Call:duration")
    val Call_receiver: IRI = NAMESPACE.iri("Call:receiver")
    val Call_receiverNumber: IRI = NAMESPACE.iri("Call:receiverNumber")
    val CallForTenders: IRI = NAMESPACE.iri("CallForTenders")
    val CallForTenders_authority: IRI = NAMESPACE.iri("CallForTenders:authority")
    val CallForTenders_authorityReferenceId: IRI = NAMESPACE.iri("CallForTenders:authorityReferenceId")
    val CallForTenders_awardedInLots: IRI = NAMESPACE.iri("CallForTenders:awardedInLots")
    val CallForTenders_awardingDate: IRI = NAMESPACE.iri("CallForTenders:awardingDate")
    val CallForTenders_awardNoticeDate: IRI = NAMESPACE.iri("CallForTenders:awardNoticeDate")
    val CallForTenders_callId: IRI = NAMESPACE.iri("CallForTenders:callId")
    val CallForTenders_certificationCheck: IRI = NAMESPACE.iri("CallForTenders:certificationCheck")
    val CallForTenders_clarificationDeadline: IRI = NAMESPACE.iri("CallForTenders:clarificationDeadline")
    val CallForTenders_contractAwards: IRI = NAMESPACE.iri("CallForTenders:contractAwards")
    val CallForTenders_contractNoticeDate: IRI = NAMESPACE.iri("CallForTenders:contractNoticeDate")
    val CallForTenders_cpvCode: IRI = NAMESPACE.iri("CallForTenders:cpvCode")
    val CallForTenders_directive: IRI = NAMESPACE.iri("CallForTenders:directive")
    val CallForTenders_euFunding: IRI = NAMESPACE.iri("CallForTenders:euFunding")
    val CallForTenders_evaluationMechanism: IRI = NAMESPACE.iri("CallForTenders:evaluationMechanism")
    val CallForTenders_fallsUnderGPPScope: IRI = NAMESPACE.iri("CallForTenders:fallsUnderGPPScope")
    val CallForTenders_involvesOutcome: IRI = NAMESPACE.iri("CallForTenders:involvesOutcome")
    val CallForTenders_lotsNames: IRI = NAMESPACE.iri("CallForTenders:lotsNames")
    val CallForTenders_maximumNumberOfLots: IRI = NAMESPACE.iri("CallForTenders:maximumNumberOfLots")
    val CallForTenders_multipleTenders: IRI = NAMESPACE.iri("CallForTenders:multipleTenders")
    val CallForTenders_numberOfLots: IRI = NAMESPACE.iri("CallForTenders:numberOfLots")
    val CallForTenders_nutsCode: IRI = NAMESPACE.iri("CallForTenders:nutsCode")
    val CallForTenders_onBehalfOf: IRI = NAMESPACE.iri("CallForTenders:onBehalfOf")
    val CallForTenders_paymentOptions: IRI = NAMESPACE.iri("CallForTenders:paymentOptions")
    val CallForTenders_procedure: IRI = NAMESPACE.iri("CallForTenders:procedure")
    val CallForTenders_procurementType: IRI = NAMESPACE.iri("CallForTenders:procurementType")
    val CallForTenders_publicationDate: IRI = NAMESPACE.iri("CallForTenders:publicationDate")
    val CallForTenders_relationToThreshold: IRI = NAMESPACE.iri("CallForTenders:relationToThreshold")
    val CallForTenders_reverseAuctionsIncluded: IRI = NAMESPACE.iri("CallForTenders:reverseAuctionsIncluded")
    val CallForTenders_submissionDeadline: IRI = NAMESPACE.iri("CallForTenders:submissionDeadline")
    val CallForTenders_tedUrl: IRI = NAMESPACE.iri("CallForTenders:tedUrl")
    val CallForTenders_tenderers: IRI = NAMESPACE.iri("CallForTenders:tenderers")
    val CallForTenders_tendersForLots: IRI = NAMESPACE.iri("CallForTenders:tendersForLots")
    val CallForTenders_title: IRI = NAMESPACE.iri("CallForTenders:title")
    val Company: IRI = NAMESPACE.iri("Company")
    val Company_bikCode: IRI = NAMESPACE.iri("Company:bikCode")
    val Company_caemCode: IRI = NAMESPACE.iri("Company:caemCode")
    val Company_capital: IRI = NAMESPACE.iri("Company:capital")
    val Company_cikCode: IRI = NAMESPACE.iri("Company:cikCode")
    val Company_coatoCode: IRI = NAMESPACE.iri("Company:coatoCode")
    val Company_fnsCode: IRI = NAMESPACE.iri("Company:fnsCode")
    val Company_fssCode: IRI = NAMESPACE.iri("Company:fssCode")
    val Company_ibcRuc: IRI = NAMESPACE.iri("Company:ibcRuc")
    val Company_ipoCode: IRI = NAMESPACE.iri("Company:ipoCode")
    val Company_irsCode: IRI = NAMESPACE.iri("Company:irsCode")
    val Company_jibCode: IRI = NAMESPACE.iri("Company:jibCode")
    val Company_jurisdiction: IRI = NAMESPACE.iri("Company:jurisdiction")
    val Company_kppCode: IRI = NAMESPACE.iri("Company:kppCode")
    val Company_mbsCode: IRI = NAMESPACE.iri("Company:mbsCode")
    val Company_okopfCode: IRI = NAMESPACE.iri("Company:okopfCode")
    val Company_oksmCode: IRI = NAMESPACE.iri("Company:oksmCode")
    val Company_okvedCode: IRI = NAMESPACE.iri("Company:okvedCode")
    val Company_pfrNumber: IRI = NAMESPACE.iri("Company:pfrNumber")
    val Company_registrationNumber: IRI = NAMESPACE.iri("Company:registrationNumber")
    val Company_voenCode: IRI = NAMESPACE.iri("Company:voenCode")
    val Contract: IRI = NAMESPACE.iri("Contract")
    val Contract_authority: IRI = NAMESPACE.iri("Contract:authority")
    val Contract_awards: IRI = NAMESPACE.iri("Contract:awards")
    val Contract_cancelled: IRI = NAMESPACE.iri("Contract:cancelled")
    val Contract_classification: IRI = NAMESPACE.iri("Contract:classification")
    val Contract_contractDate: IRI = NAMESPACE.iri("Contract:contractDate")
    val Contract_criteria: IRI = NAMESPACE.iri("Contract:criteria")
    val Contract_economicActivityContract: IRI = NAMESPACE.iri("Contract:economicActivityContract")
    val Contract_method: IRI = NAMESPACE.iri("Contract:method")
    val Contract_noticeId: IRI = NAMESPACE.iri("Contract:noticeId")
    val Contract_numberAwards: IRI = NAMESPACE.iri("Contract:numberAwards")
    val Contract_paymentContract: IRI = NAMESPACE.iri("Contract:paymentContract")
    val Contract_procedure: IRI = NAMESPACE.iri("Contract:procedure")
    val Contract_procedureNumber: IRI = NAMESPACE.iri("Contract:procedureNumber")
    val Contract_project: IRI = NAMESPACE.iri("Contract:project")
    val Contract_status: IRI = NAMESPACE.iri("Contract:status")
    val Contract_title: IRI = NAMESPACE.iri("Contract:title")
    val Contract_type: IRI = NAMESPACE.iri("Contract:type")
    val ContractAward: IRI = NAMESPACE.iri("ContractAward")
    val ContractAward_amended: IRI = NAMESPACE.iri("ContractAward:amended")
    val ContractAward_callForTenders: IRI = NAMESPACE.iri("ContractAward:callForTenders")
    val ContractAward_contract: IRI = NAMESPACE.iri("ContractAward:contract")
    val ContractAward_cpvCode: IRI = NAMESPACE.iri("ContractAward:cpvCode")
    val ContractAward_decisionReason: IRI = NAMESPACE.iri("ContractAward:decisionReason")
    val ContractAward_documentNumber: IRI = NAMESPACE.iri("ContractAward:documentNumber")
    val ContractAward_documentType: IRI = NAMESPACE.iri("ContractAward:documentType")
    val ContractAward_lotNumber: IRI = NAMESPACE.iri("ContractAward:lotNumber")
    val ContractAward_nutsCode: IRI = NAMESPACE.iri("ContractAward:nutsCode")
    val ContractAward_supplier: IRI = NAMESPACE.iri("ContractAward:supplier")
    val CourtCase: IRI = NAMESPACE.iri("CourtCase")
    val CourtCase_caseNumber: IRI = NAMESPACE.iri("CourtCase:caseNumber")
    val CourtCase_category: IRI = NAMESPACE.iri("CourtCase:category")
    val CourtCase_closeDate: IRI = NAMESPACE.iri("CourtCase:closeDate")
    val CourtCase_court: IRI = NAMESPACE.iri("CourtCase:court")
    val CourtCase_fileDate: IRI = NAMESPACE.iri("CourtCase:fileDate")
    val CourtCase_parties: IRI = NAMESPACE.iri("CourtCase:parties")
    val CourtCase_status: IRI = NAMESPACE.iri("CourtCase:status")
    val CourtCase_type: IRI = NAMESPACE.iri("CourtCase:type")
    val CourtCaseParty: IRI = NAMESPACE.iri("CourtCaseParty")
    val CourtCaseParty_case: IRI = NAMESPACE.iri("CourtCaseParty:case")
    val CourtCaseParty_party: IRI = NAMESPACE.iri("CourtCaseParty:party")
    val CryptoWallet: IRI = NAMESPACE.iri("CryptoWallet")
    val CryptoWallet_balance: IRI = NAMESPACE.iri("CryptoWallet:balance")
    val CryptoWallet_balanceDate: IRI = NAMESPACE.iri("CryptoWallet:balanceDate")
    val CryptoWallet_creationDate: IRI = NAMESPACE.iri("CryptoWallet:creationDate")
    val CryptoWallet_currencySymbol: IRI = NAMESPACE.iri("CryptoWallet:currencySymbol")
    val CryptoWallet_holder: IRI = NAMESPACE.iri("CryptoWallet:holder")
    val CryptoWallet_mangingExchange: IRI = NAMESPACE.iri("CryptoWallet:mangingExchange")
    val CryptoWallet_privateKey: IRI = NAMESPACE.iri("CryptoWallet:privateKey")
    val CryptoWallet_publicKey: IRI = NAMESPACE.iri("CryptoWallet:publicKey")
    val Debt: IRI = NAMESPACE.iri("Debt")
    val Debt_creditor: IRI = NAMESPACE.iri("Debt:creditor")
    val Debt_debtor: IRI = NAMESPACE.iri("Debt:debtor")
    val Directorship: IRI = NAMESPACE.iri("Directorship")
    val Directorship_director: IRI = NAMESPACE.iri("Directorship:director")
    val Directorship_organization: IRI = NAMESPACE.iri("Directorship:organization")
    val Directorship_secretary: IRI = NAMESPACE.iri("Directorship:secretary")
    val Document: IRI = NAMESPACE.iri("Document")
    val Document_ancestors: IRI = NAMESPACE.iri("Document:ancestors")
    val Document_authoredAt: IRI = NAMESPACE.iri("Document:authoredAt")
    val Document_bodyText: IRI = NAMESPACE.iri("Document:bodyText")
    val Document_contentHash: IRI = NAMESPACE.iri("Document:contentHash")
    val Document_crawler: IRI = NAMESPACE.iri("Document:crawler")
    val Document_encoding: IRI = NAMESPACE.iri("Document:encoding")
    val Document_extension: IRI = NAMESPACE.iri("Document:extension")
    val Document_fileName: IRI = NAMESPACE.iri("Document:fileName")
    val Document_fileSize: IRI = NAMESPACE.iri("Document:fileSize")
    val Document_generator: IRI = NAMESPACE.iri("Document:generator")
    val Document_mentionedEntities: IRI = NAMESPACE.iri("Document:mentionedEntities")
    val Document_messageId: IRI = NAMESPACE.iri("Document:messageId")
    val Document_processingError: IRI = NAMESPACE.iri("Document:processingError")
    val Document_processingStatus: IRI = NAMESPACE.iri("Document:processingStatus")
    val Document_proven: IRI = NAMESPACE.iri("Document:proven")
    val Document_publishedAt: IRI = NAMESPACE.iri("Document:publishedAt")
    val Document_relatedEntities: IRI = NAMESPACE.iri("Document:relatedEntities")
    val Document_translatedLanguage: IRI = NAMESPACE.iri("Document:translatedLanguage")
    val Document_translatedText: IRI = NAMESPACE.iri("Document:translatedText")
    val Documentation: IRI = NAMESPACE.iri("Documentation")
    val Documentation_document: IRI = NAMESPACE.iri("Documentation:document")
    val Documentation_entity: IRI = NAMESPACE.iri("Documentation:entity")
    val EconomicActivity: IRI = NAMESPACE.iri("EconomicActivity")
    val EconomicActivity_bankAccount: IRI = NAMESPACE.iri("EconomicActivity:bankAccount")
    val EconomicActivity_bankForeign: IRI = NAMESPACE.iri("EconomicActivity:bankForeign")
    val EconomicActivity_bankRub: IRI = NAMESPACE.iri("EconomicActivity:bankRub")
    val EconomicActivity_ccdNumber: IRI = NAMESPACE.iri("EconomicActivity:ccdNumber")
    val EconomicActivity_ccdValue: IRI = NAMESPACE.iri("EconomicActivity:ccdValue")
    val EconomicActivity_contract: IRI = NAMESPACE.iri("EconomicActivity:contract")
    val EconomicActivity_contractHolder: IRI = NAMESPACE.iri("EconomicActivity:contractHolder")
    val EconomicActivity_customsAmount: IRI = NAMESPACE.iri("EconomicActivity:customsAmount")
    val EconomicActivity_customsProcedure: IRI = NAMESPACE.iri("EconomicActivity:customsProcedure")
    val EconomicActivity_declarant: IRI = NAMESPACE.iri("EconomicActivity:declarant")
    val EconomicActivity_departureCountry: IRI = NAMESPACE.iri("EconomicActivity:departureCountry")
    val EconomicActivity_destinationCountry: IRI = NAMESPACE.iri("EconomicActivity:destinationCountry")
    val EconomicActivity_directionOfTransportation: IRI = NAMESPACE.iri("EconomicActivity:directionOfTransportation")
    val EconomicActivity_dollarExchRate: IRI = NAMESPACE.iri("EconomicActivity:dollarExchRate")
    val EconomicActivity_goodsDescription: IRI = NAMESPACE.iri("EconomicActivity:goodsDescription")
    val EconomicActivity_invoiceAmount: IRI = NAMESPACE.iri("EconomicActivity:invoiceAmount")
    val EconomicActivity_originCountry: IRI = NAMESPACE.iri("EconomicActivity:originCountry")
    val EconomicActivity_receiver: IRI = NAMESPACE.iri("EconomicActivity:receiver")
    val EconomicActivity_sender: IRI = NAMESPACE.iri("EconomicActivity:sender")
    val EconomicActivity_tradingCountry: IRI = NAMESPACE.iri("EconomicActivity:tradingCountry")
    val EconomicActivity_transport: IRI = NAMESPACE.iri("EconomicActivity:transport")
    val EconomicActivity_vedCode: IRI = NAMESPACE.iri("EconomicActivity:vedCode")
    val EconomicActivity_vedCodeDescription: IRI = NAMESPACE.iri("EconomicActivity:vedCodeDescription")
    val Email: IRI = NAMESPACE.iri("Email")
    val Email_bcc: IRI = NAMESPACE.iri("Email:bcc")
    val Email_cc: IRI = NAMESPACE.iri("Email:cc")
    val Email_emitters: IRI = NAMESPACE.iri("Email:emitters")
    val Email_from: IRI = NAMESPACE.iri("Email:from")
    val Email_headers: IRI = NAMESPACE.iri("Email:headers")
    val Email_inReplyTo: IRI = NAMESPACE.iri("Email:inReplyTo")
    val Email_inReplyToEmail: IRI = NAMESPACE.iri("Email:inReplyToEmail")
    val Email_recipients: IRI = NAMESPACE.iri("Email:recipients")
    val Email_responses: IRI = NAMESPACE.iri("Email:responses")
    val Email_sender: IRI = NAMESPACE.iri("Email:sender")
    val Email_subject: IRI = NAMESPACE.iri("Email:subject")
    val Email_threadTopic: IRI = NAMESPACE.iri("Email:threadTopic")
    val Email_to: IRI = NAMESPACE.iri("Email:to")
    val Employment: IRI = NAMESPACE.iri("Employment")
    val Employment_employee: IRI = NAMESPACE.iri("Employment:employee")
    val Employment_employer: IRI = NAMESPACE.iri("Employment:employer")
    val Event: IRI = NAMESPACE.iri("Event")
    val Event_country: IRI = NAMESPACE.iri("Event:country")
    val Event_important: IRI = NAMESPACE.iri("Event:important")
    val Event_involved: IRI = NAMESPACE.iri("Event:involved")
    val Event_location: IRI = NAMESPACE.iri("Event:location")
    val Event_organizer: IRI = NAMESPACE.iri("Event:organizer")
    val Family: IRI = NAMESPACE.iri("Family")
    val Family_person: IRI = NAMESPACE.iri("Family:person")
    val Family_relationship: IRI = NAMESPACE.iri("Family:relationship")
    val Family_relative: IRI = NAMESPACE.iri("Family:relative")
    val Folder: IRI = NAMESPACE.iri("Folder")
    val Folder_children: IRI = NAMESPACE.iri("Folder:children")
    val Folder_descendants: IRI = NAMESPACE.iri("Folder:descendants")
    val HyperText: IRI = NAMESPACE.iri("HyperText")
    val HyperText_bodyHtml: IRI = NAMESPACE.iri("HyperText:bodyHtml")
    val Identification: IRI = NAMESPACE.iri("Identification")
    val Identification_authority: IRI = NAMESPACE.iri("Identification:authority")
    val Identification_country: IRI = NAMESPACE.iri("Identification:country")
    val Identification_holder: IRI = NAMESPACE.iri("Identification:holder")
    val Identification_number: IRI = NAMESPACE.iri("Identification:number")
    val Identification_type: IRI = NAMESPACE.iri("Identification:type")
    val Image: IRI = NAMESPACE.iri("Image")
    val Image_pictured: IRI = NAMESPACE.iri("Image:pictured")
    val Interest: IRI = NAMESPACE.iri("Interest")
    val Interest_role: IRI = NAMESPACE.iri("Interest:role")
    val Interest_status: IRI = NAMESPACE.iri("Interest:status")
    val Interval: IRI = NAMESPACE.iri("Interval")
    val Interval_alephUrl: IRI = NAMESPACE.iri("Interval:alephUrl")
    val Interval_date: IRI = NAMESPACE.iri("Interval:date")
    val Interval_description: IRI = NAMESPACE.iri("Interval:description")
    val Interval_endDate: IRI = NAMESPACE.iri("Interval:endDate")
    val Interval_indexText: IRI = NAMESPACE.iri("Interval:indexText")
    val Interval_modifiedAt: IRI = NAMESPACE.iri("Interval:modifiedAt")
    val Interval_namesMentioned: IRI = NAMESPACE.iri("Interval:namesMentioned")
    val Interval_publisher: IRI = NAMESPACE.iri("Interval:publisher")
    val Interval_publisherUrl: IRI = NAMESPACE.iri("Interval:publisherUrl")
    val Interval_recordId: IRI = NAMESPACE.iri("Interval:recordId")
    val Interval_retrievedAt: IRI = NAMESPACE.iri("Interval:retrievedAt")
    val Interval_sourceUrl: IRI = NAMESPACE.iri("Interval:sourceUrl")
    val Interval_startDate: IRI = NAMESPACE.iri("Interval:startDate")
    val Interval_summary: IRI = NAMESPACE.iri("Interval:summary")
    val LegalEntity: IRI = NAMESPACE.iri("LegalEntity")
    val LegalEntity_agencyClient: IRI = NAMESPACE.iri("LegalEntity:agencyClient")
    val LegalEntity_agentRepresentation: IRI = NAMESPACE.iri("LegalEntity:agentRepresentation")
    val LegalEntity_authoredAssessments: IRI = NAMESPACE.iri("LegalEntity:authoredAssessments")
    val LegalEntity_bvdId: IRI = NAMESPACE.iri("LegalEntity:bvdId")
    val LegalEntity_callForTenders: IRI = NAMESPACE.iri("LegalEntity:callForTenders")
    val LegalEntity_callsMade: IRI = NAMESPACE.iri("LegalEntity:callsMade")
    val LegalEntity_callsReceived: IRI = NAMESPACE.iri("LegalEntity:callsReceived")
    val LegalEntity_classification: IRI = NAMESPACE.iri("LegalEntity:classification")
    val LegalEntity_contractAuthority: IRI = NAMESPACE.iri("LegalEntity:contractAuthority")
    val LegalEntity_contractAwardSupplier: IRI = NAMESPACE.iri("LegalEntity:contractAwardSupplier")
    val LegalEntity_cryptoWallets: IRI = NAMESPACE.iri("LegalEntity:cryptoWallets")
    val LegalEntity_debtCreditor: IRI = NAMESPACE.iri("LegalEntity:debtCreditor")
    val LegalEntity_debtDebtor: IRI = NAMESPACE.iri("LegalEntity:debtDebtor")
    val LegalEntity_delegatedCallForTenders: IRI = NAMESPACE.iri("LegalEntity:delegatedCallForTenders")
    val LegalEntity_directorshipDirector: IRI = NAMESPACE.iri("LegalEntity:directorshipDirector")
    val LegalEntity_dissolutionDate: IRI = NAMESPACE.iri("LegalEntity:dissolutionDate")
    val LegalEntity_dunsCode: IRI = NAMESPACE.iri("LegalEntity:dunsCode")
    val LegalEntity_economicActivityDeclarant: IRI = NAMESPACE.iri("LegalEntity:economicActivityDeclarant")
    val LegalEntity_economicActivityHolder: IRI = NAMESPACE.iri("LegalEntity:economicActivityHolder")
    val LegalEntity_economicActivityReceiver: IRI = NAMESPACE.iri("LegalEntity:economicActivityReceiver")
    val LegalEntity_economicActivitySender: IRI = NAMESPACE.iri("LegalEntity:economicActivitySender")
    val LegalEntity_email: IRI = NAMESPACE.iri("LegalEntity:email")
    val LegalEntity_emailsReceived: IRI = NAMESPACE.iri("LegalEntity:emailsReceived")
    val LegalEntity_emailsSent: IRI = NAMESPACE.iri("LegalEntity:emailsSent")
    val LegalEntity_eventsInvolved: IRI = NAMESPACE.iri("LegalEntity:eventsInvolved")
    val LegalEntity_eventsOrganized: IRI = NAMESPACE.iri("LegalEntity:eventsOrganized")
    val LegalEntity_icijId: IRI = NAMESPACE.iri("LegalEntity:icijId")
    val LegalEntity_identification: IRI = NAMESPACE.iri("LegalEntity:identification")
    val LegalEntity_idNumber: IRI = NAMESPACE.iri("LegalEntity:idNumber")
    val LegalEntity_incorporationDate: IRI = NAMESPACE.iri("LegalEntity:incorporationDate")
    val LegalEntity_innCode: IRI = NAMESPACE.iri("LegalEntity:innCode")
    val LegalEntity_jurisdiction: IRI = NAMESPACE.iri("LegalEntity:jurisdiction")
    val LegalEntity_legalForm: IRI = NAMESPACE.iri("LegalEntity:legalForm")
    val LegalEntity_leiCode: IRI = NAMESPACE.iri("LegalEntity:leiCode")
    val LegalEntity_mainCountry: IRI = NAMESPACE.iri("LegalEntity:mainCountry")
    val LegalEntity_membershipMember: IRI = NAMESPACE.iri("LegalEntity:membershipMember")
    val LegalEntity_mentionedBy: IRI = NAMESPACE.iri("LegalEntity:mentionedBy")
    val LegalEntity_messagesReceived: IRI = NAMESPACE.iri("LegalEntity:messagesReceived")
    val LegalEntity_messagesSent: IRI = NAMESPACE.iri("LegalEntity:messagesSent")
    val LegalEntity_ogrnCode: IRI = NAMESPACE.iri("LegalEntity:ogrnCode")
    val LegalEntity_okpoCode: IRI = NAMESPACE.iri("LegalEntity:okpoCode")
    val LegalEntity_opencorporatesUrl: IRI = NAMESPACE.iri("LegalEntity:opencorporatesUrl")
    val LegalEntity_operatedVehicles: IRI = NAMESPACE.iri("LegalEntity:operatedVehicles")
    val LegalEntity_ownedVehicles: IRI = NAMESPACE.iri("LegalEntity:ownedVehicles")
    val LegalEntity_ownershipOwner: IRI = NAMESPACE.iri("LegalEntity:ownershipOwner")
    val LegalEntity_parent: IRI = NAMESPACE.iri("LegalEntity:parent")
    val LegalEntity_paymentBeneficiary: IRI = NAMESPACE.iri("LegalEntity:paymentBeneficiary")
    val LegalEntity_paymentPayer: IRI = NAMESPACE.iri("LegalEntity:paymentPayer")
    val LegalEntity_phone: IRI = NAMESPACE.iri("LegalEntity:phone")
    val LegalEntity_predecessors: IRI = NAMESPACE.iri("LegalEntity:predecessors")
    val LegalEntity_projectParticipation: IRI = NAMESPACE.iri("LegalEntity:projectParticipation")
    val LegalEntity_registrationNumber: IRI = NAMESPACE.iri("LegalEntity:registrationNumber")
    val LegalEntity_sector: IRI = NAMESPACE.iri("LegalEntity:sector")
    val LegalEntity_securities: IRI = NAMESPACE.iri("LegalEntity:securities")
    val LegalEntity_status: IRI = NAMESPACE.iri("LegalEntity:status")
    val LegalEntity_subsidiaries: IRI = NAMESPACE.iri("LegalEntity:subsidiaries")
    val LegalEntity_successors: IRI = NAMESPACE.iri("LegalEntity:successors")
    val LegalEntity_swiftBic: IRI = NAMESPACE.iri("LegalEntity:swiftBic")
    val LegalEntity_taxNumber: IRI = NAMESPACE.iri("LegalEntity:taxNumber")
    val LegalEntity_taxRolls: IRI = NAMESPACE.iri("LegalEntity:taxRolls")
    val LegalEntity_taxStatus: IRI = NAMESPACE.iri("LegalEntity:taxStatus")
    val LegalEntity_userAccounts: IRI = NAMESPACE.iri("LegalEntity:userAccounts")
    val LegalEntity_vatCode: IRI = NAMESPACE.iri("LegalEntity:vatCode")
    val LegalEntity_website: IRI = NAMESPACE.iri("LegalEntity:website")
    val License: IRI = NAMESPACE.iri("License")
    val License_area: IRI = NAMESPACE.iri("License:area")
    val License_commodities: IRI = NAMESPACE.iri("License:commodities")
    val License_reviewDate: IRI = NAMESPACE.iri("License:reviewDate")
    val Membership: IRI = NAMESPACE.iri("Membership")
    val Membership_member: IRI = NAMESPACE.iri("Membership:member")
    val Membership_organization: IRI = NAMESPACE.iri("Membership:organization")
    val Mention: IRI = NAMESPACE.iri("Mention")
    val Mention_contextCountry: IRI = NAMESPACE.iri("Mention:contextCountry")
    val Mention_contextEmail: IRI = NAMESPACE.iri("Mention:contextEmail")
    val Mention_contextPhone: IRI = NAMESPACE.iri("Mention:contextPhone")
    val Mention_detectedSchema: IRI = NAMESPACE.iri("Mention:detectedSchema")
    val Mention_document: IRI = NAMESPACE.iri("Mention:document")
    val Mention_name: IRI = NAMESPACE.iri("Mention:name")
    val Mention_resolved: IRI = NAMESPACE.iri("Mention:resolved")
    val Message: IRI = NAMESPACE.iri("Message")
    val Message_inReplyTo: IRI = NAMESPACE.iri("Message:inReplyTo")
    val Message_inReplyToMessage: IRI = NAMESPACE.iri("Message:inReplyToMessage")
    val Message_metadata: IRI = NAMESPACE.iri("Message:metadata")
    val Message_recipientAccount: IRI = NAMESPACE.iri("Message:recipientAccount")
    val Message_recipients: IRI = NAMESPACE.iri("Message:recipients")
    val Message_responses: IRI = NAMESPACE.iri("Message:responses")
    val Message_sender: IRI = NAMESPACE.iri("Message:sender")
    val Message_senderAccount: IRI = NAMESPACE.iri("Message:senderAccount")
    val Message_subject: IRI = NAMESPACE.iri("Message:subject")
    val Message_threadTopic: IRI = NAMESPACE.iri("Message:threadTopic")
    val Note: IRI = NAMESPACE.iri("Note")
    val Note_entity: IRI = NAMESPACE.iri("Note:entity")
    val Organization: IRI = NAMESPACE.iri("Organization")
    val Organization_bankAccounts: IRI = NAMESPACE.iri("Organization:bankAccounts")
    val Organization_directorshipOrganization: IRI = NAMESPACE.iri("Organization:directorshipOrganization")
    val Organization_employees: IRI = NAMESPACE.iri("Organization:employees")
    val Organization_membershipOrganization: IRI = NAMESPACE.iri("Organization:membershipOrganization")
    val Ownership: IRI = NAMESPACE.iri("Ownership")
    val Ownership_asset: IRI = NAMESPACE.iri("Ownership:asset")
    val Ownership_legalBasis: IRI = NAMESPACE.iri("Ownership:legalBasis")
    val Ownership_owner: IRI = NAMESPACE.iri("Ownership:owner")
    val Ownership_ownershipType: IRI = NAMESPACE.iri("Ownership:ownershipType")
    val Ownership_percentage: IRI = NAMESPACE.iri("Ownership:percentage")
    val Ownership_sharesCount: IRI = NAMESPACE.iri("Ownership:sharesCount")
    val Ownership_sharesCurrency: IRI = NAMESPACE.iri("Ownership:sharesCurrency")
    val Ownership_sharesType: IRI = NAMESPACE.iri("Ownership:sharesType")
    val Ownership_sharesValue: IRI = NAMESPACE.iri("Ownership:sharesValue")
    val Package: IRI = NAMESPACE.iri("Package")
    val Page: IRI = NAMESPACE.iri("Page")
    val Page_bodyText: IRI = NAMESPACE.iri("Page:bodyText")
    val Page_detectedLanguage: IRI = NAMESPACE.iri("Page:detectedLanguage")
    val Page_index: IRI = NAMESPACE.iri("Page:index")
    val Page_indexText: IRI = NAMESPACE.iri("Page:indexText")
    val Page_translatedText: IRI = NAMESPACE.iri("Page:translatedText")
    val Page_translatedTextLanguage: IRI = NAMESPACE.iri("Page:translatedTextLanguage")
    val Pages: IRI = NAMESPACE.iri("Pages")
    val Pages_pages: IRI = NAMESPACE.iri("Pages:pages")
    val Pages_pdfHash: IRI = NAMESPACE.iri("Pages:pdfHash")
    val Passport: IRI = NAMESPACE.iri("Passport")
    val Passport_birthDate: IRI = NAMESPACE.iri("Passport:birthDate")
    val Passport_birthPlace: IRI = NAMESPACE.iri("Passport:birthPlace")
    val Passport_gender: IRI = NAMESPACE.iri("Passport:gender")
    val Passport_givenName: IRI = NAMESPACE.iri("Passport:givenName")
    val Passport_passportNumber: IRI = NAMESPACE.iri("Passport:passportNumber")
    val Passport_personalNumber: IRI = NAMESPACE.iri("Passport:personalNumber")
    val Passport_surname: IRI = NAMESPACE.iri("Passport:surname")
    val Payment: IRI = NAMESPACE.iri("Payment")
    val Payment_beneficiary: IRI = NAMESPACE.iri("Payment:beneficiary")
    val Payment_beneficiaryAccount: IRI = NAMESPACE.iri("Payment:beneficiaryAccount")
    val Payment_contract: IRI = NAMESPACE.iri("Payment:contract")
    val Payment_payer: IRI = NAMESPACE.iri("Payment:payer")
    val Payment_payerAccount: IRI = NAMESPACE.iri("Payment:payerAccount")
    val Payment_programme: IRI = NAMESPACE.iri("Payment:programme")
    val Payment_project: IRI = NAMESPACE.iri("Payment:project")
    val Payment_purpose: IRI = NAMESPACE.iri("Payment:purpose")
    val Payment_sequenceNumber: IRI = NAMESPACE.iri("Payment:sequenceNumber")
    val Payment_transactionNumber: IRI = NAMESPACE.iri("Payment:transactionNumber")
    val Person_associates: IRI = NAMESPACE.iri("Person:associates")
    val Person_associations: IRI = NAMESPACE.iri("Person:associations")
    val Person_birthPlace: IRI = NAMESPACE.iri("Person:birthPlace")
    val Person_deathDate: IRI = NAMESPACE.iri("Person:deathDate")
    val Person_education: IRI = NAMESPACE.iri("Person:education")
    val Person_employers: IRI = NAMESPACE.iri("Person:employers")
    val Person_ethnicity: IRI = NAMESPACE.iri("Person:ethnicity")
    val Person_familyPerson: IRI = NAMESPACE.iri("Person:familyPerson")
    val Person_familyRelative: IRI = NAMESPACE.iri("Person:familyRelative")
    val Person_fatherName: IRI = NAMESPACE.iri("Person:fatherName")
    val Person_gender: IRI = NAMESPACE.iri("Person:gender")
    val Person_images: IRI = NAMESPACE.iri("Person:images")
    val Person_middleName: IRI = NAMESPACE.iri("Person:middleName")
    val Person_motherName: IRI = NAMESPACE.iri("Person:motherName")
    val Person_nationality: IRI = NAMESPACE.iri("Person:nationality")
    val Person_passportNumber: IRI = NAMESPACE.iri("Person:passportNumber")
    val Person_political: IRI = NAMESPACE.iri("Person:political")
    val Person_position: IRI = NAMESPACE.iri("Person:position")
    val Person_posts: IRI = NAMESPACE.iri("Person:posts")
    val Person_religion: IRI = NAMESPACE.iri("Person:religion")
    val Person_secondName: IRI = NAMESPACE.iri("Person:secondName")
    val PlainText: IRI = NAMESPACE.iri("PlainText")
    val Post: IRI = NAMESPACE.iri("Post")
    val Post_holder: IRI = NAMESPACE.iri("Post:holder")
    val Post_organization: IRI = NAMESPACE.iri("Post:organization")
    val Post_wikidataId: IRI = NAMESPACE.iri("Post:wikidataId")
    val Project: IRI = NAMESPACE.iri("Project")
    val Project_contracts: IRI = NAMESPACE.iri("Project:contracts")
    val Project_goal: IRI = NAMESPACE.iri("Project:goal")
    val Project_participants: IRI = NAMESPACE.iri("Project:participants")
    val Project_payments: IRI = NAMESPACE.iri("Project:payments")
    val Project_phase: IRI = NAMESPACE.iri("Project:phase")
    val Project_projectId: IRI = NAMESPACE.iri("Project:projectId")
    val Project_status: IRI = NAMESPACE.iri("Project:status")
    val ProjectParticipant: IRI = NAMESPACE.iri("ProjectParticipant")
    val ProjectParticipant_participant: IRI = NAMESPACE.iri("ProjectParticipant:participant")
    val ProjectParticipant_project: IRI = NAMESPACE.iri("ProjectParticipant:project")
    val PublicBody: IRI = NAMESPACE.iri("PublicBody")
    val RealEstate: IRI = NAMESPACE.iri("RealEstate")
    val RealEstate_area: IRI = NAMESPACE.iri("RealEstate:area")
    val RealEstate_cadastralCode: IRI = NAMESPACE.iri("RealEstate:cadastralCode")
    val RealEstate_censusBlock: IRI = NAMESPACE.iri("RealEstate:censusBlock")
    val RealEstate_createDate: IRI = NAMESPACE.iri("RealEstate:createDate")
    val RealEstate_encumbrance: IRI = NAMESPACE.iri("RealEstate:encumbrance")
    val RealEstate_landType: IRI = NAMESPACE.iri("RealEstate:landType")
    val RealEstate_latitude: IRI = NAMESPACE.iri("RealEstate:latitude")
    val RealEstate_longitude: IRI = NAMESPACE.iri("RealEstate:longitude")
    val RealEstate_propertyType: IRI = NAMESPACE.iri("RealEstate:propertyType")
    val RealEstate_registrationNumber: IRI = NAMESPACE.iri("RealEstate:registrationNumber")
    val RealEstate_tenure: IRI = NAMESPACE.iri("RealEstate:tenure")
    val RealEstate_titleNumber: IRI = NAMESPACE.iri("RealEstate:titleNumber")
    val Representation: IRI = NAMESPACE.iri("Representation")
    val Representation_agent: IRI = NAMESPACE.iri("Representation:agent")
    val Representation_client: IRI = NAMESPACE.iri("Representation:client")
    val Sanction: IRI = NAMESPACE.iri("Sanction")
    val Sanction_authority: IRI = NAMESPACE.iri("Sanction:authority")
    val Sanction_authorityId: IRI = NAMESPACE.iri("Sanction:authorityId")
    val Sanction_country: IRI = NAMESPACE.iri("Sanction:country")
    val Sanction_duration: IRI = NAMESPACE.iri("Sanction:duration")
    val Sanction_entity: IRI = NAMESPACE.iri("Sanction:entity")
    val Sanction_listingDate: IRI = NAMESPACE.iri("Sanction:listingDate")
    val Sanction_program: IRI = NAMESPACE.iri("Sanction:program")
    val Sanction_provisions: IRI = NAMESPACE.iri("Sanction:provisions")
    val Sanction_reason: IRI = NAMESPACE.iri("Sanction:reason")
    val Sanction_status: IRI = NAMESPACE.iri("Sanction:status")
    val Sanction_unscId: IRI = NAMESPACE.iri("Sanction:unscId")
    val Security: IRI = NAMESPACE.iri("Security")
    val Security_classification: IRI = NAMESPACE.iri("Security:classification")
    val Security_collateral: IRI = NAMESPACE.iri("Security:collateral")
    val Security_isin: IRI = NAMESPACE.iri("Security:isin")
    val Security_issueDate: IRI = NAMESPACE.iri("Security:issueDate")
    val Security_issuer: IRI = NAMESPACE.iri("Security:issuer")
    val Security_maturityDate: IRI = NAMESPACE.iri("Security:maturityDate")
    val Security_registrationNumber: IRI = NAMESPACE.iri("Security:registrationNumber")
    val Security_ticker: IRI = NAMESPACE.iri("Security:ticker")
    val Security_type: IRI = NAMESPACE.iri("Security:type")
    val Similar: IRI = NAMESPACE.iri("Similar")
    val Similar_candidate: IRI = NAMESPACE.iri("Similar:candidate")
    val Similar_confidenceScore: IRI = NAMESPACE.iri("Similar:confidenceScore")
    val Similar_criteria: IRI = NAMESPACE.iri("Similar:criteria")
    val Similar_match: IRI = NAMESPACE.iri("Similar:match")
    val Similar_matcher: IRI = NAMESPACE.iri("Similar:matcher")
    val Succession: IRI = NAMESPACE.iri("Succession")
    val Succession_predecessor: IRI = NAMESPACE.iri("Succession:predecessor")
    val Succession_successor: IRI = NAMESPACE.iri("Succession:successor")
    val Table: IRI = NAMESPACE.iri("Table")
    val Table_columns: IRI = NAMESPACE.iri("Table:columns")
    val Table_csvHash: IRI = NAMESPACE.iri("Table:csvHash")
    val Table_rowCount: IRI = NAMESPACE.iri("Table:rowCount")
    val TaxRoll: IRI = NAMESPACE.iri("TaxRoll")
    val TaxRoll_birthDate: IRI = NAMESPACE.iri("TaxRoll:birthDate")
    val TaxRoll_country: IRI = NAMESPACE.iri("TaxRoll:country")
    val TaxRoll_givenName: IRI = NAMESPACE.iri("TaxRoll:givenName")
    val TaxRoll_income: IRI = NAMESPACE.iri("TaxRoll:income")
    val TaxRoll_surname: IRI = NAMESPACE.iri("TaxRoll:surname")
    val TaxRoll_taxee: IRI = NAMESPACE.iri("TaxRoll:taxee")
    val TaxRoll_taxPaid: IRI = NAMESPACE.iri("TaxRoll:taxPaid")
    val TaxRoll_wealth: IRI = NAMESPACE.iri("TaxRoll:wealth")
    val Thing: IRI = NAMESPACE.iri("Thing")
    val Thing_address: IRI = NAMESPACE.iri("Thing:address")
    val Thing_addressEntity: IRI = NAMESPACE.iri("Thing:addressEntity")
    val Thing_alephUrl: IRI = NAMESPACE.iri("Thing:alephUrl")
    val Thing_candidateSimilars: IRI = NAMESPACE.iri("Thing:candidateSimilars")
    val Thing_country: IRI = NAMESPACE.iri("Thing:country")
    val Thing_courtCase: IRI = NAMESPACE.iri("Thing:courtCase")
    val Thing_createdAt: IRI = NAMESPACE.iri("Thing:createdAt")
    val Thing_description: IRI = NAMESPACE.iri("Thing:description")
    val Thing_documentedBy: IRI = NAMESPACE.iri("Thing:documentedBy")
    val Thing_indexText: IRI = NAMESPACE.iri("Thing:indexText")
    val Thing_keywords: IRI = NAMESPACE.iri("Thing:keywords")
    val Thing_matchSimilars: IRI = NAMESPACE.iri("Thing:matchSimilars")
    val Thing_modifiedAt: IRI = NAMESPACE.iri("Thing:modifiedAt")
    val Thing_noteEntities: IRI = NAMESPACE.iri("Thing:noteEntities")
    val Thing_notes: IRI = NAMESPACE.iri("Thing:notes")
    val Thing_previousName: IRI = NAMESPACE.iri("Thing:previousName")
    val Thing_program: IRI = NAMESPACE.iri("Thing:program")
    val Thing_proof: IRI = NAMESPACE.iri("Thing:proof")
    val Thing_publisher: IRI = NAMESPACE.iri("Thing:publisher")
    val Thing_publisherUrl: IRI = NAMESPACE.iri("Thing:publisherUrl")
    val Thing_retrievedAt: IRI = NAMESPACE.iri("Thing:retrievedAt")
    val Thing_sanctions: IRI = NAMESPACE.iri("Thing:sanctions")
    val Thing_sourceUrl: IRI = NAMESPACE.iri("Thing:sourceUrl")
    val Thing_summary: IRI = NAMESPACE.iri("Thing:summary")
    val Thing_topics: IRI = NAMESPACE.iri("Thing:topics")
    val Thing_unknownLinkFrom: IRI = NAMESPACE.iri("Thing:unknownLinkFrom")
    val Thing_unknownLinkTo: IRI = NAMESPACE.iri("Thing:unknownLinkTo")
    val Thing_weakAlias: IRI = NAMESPACE.iri("Thing:weakAlias")
    val Thing_wikidataId: IRI = NAMESPACE.iri("Thing:wikidataId")
    val Thing_wikipediaUrl: IRI = NAMESPACE.iri("Thing:wikipediaUrl")
    val Trip: IRI = NAMESPACE.iri("Trip")
    val Trip_endLocation: IRI = NAMESPACE.iri("Trip:endLocation")
    val Trip_startLocation: IRI = NAMESPACE.iri("Trip:startLocation")
    val Trip_vehicle: IRI = NAMESPACE.iri("Trip:vehicle")
    val UnknownLink: IRI = NAMESPACE.iri("UnknownLink")
    val UnknownLink_object: IRI = NAMESPACE.iri("UnknownLink:object")
    val UnknownLink_subject: IRI = NAMESPACE.iri("UnknownLink:subject")
    val UserAccount: IRI = NAMESPACE.iri("UserAccount")
    val UserAccount_email: IRI = NAMESPACE.iri("UserAccount:email")
    val UserAccount_ipAddress: IRI = NAMESPACE.iri("UserAccount:ipAddress")
    val UserAccount_messagesReceived: IRI = NAMESPACE.iri("UserAccount:messagesReceived")
    val UserAccount_messagesSent: IRI = NAMESPACE.iri("UserAccount:messagesSent")
    val UserAccount_number: IRI = NAMESPACE.iri("UserAccount:number")
    val UserAccount_owner: IRI = NAMESPACE.iri("UserAccount:owner")
    val UserAccount_password: IRI = NAMESPACE.iri("UserAccount:password")
    val UserAccount_service: IRI = NAMESPACE.iri("UserAccount:service")
    val UserAccount_username: IRI = NAMESPACE.iri("UserAccount:username")
    val Value: IRI = NAMESPACE.iri("Value")
    val Value_amount: IRI = NAMESPACE.iri("Value:amount")
    val Value_amountEur: IRI = NAMESPACE.iri("Value:amountEur")
    val Value_amountUsd: IRI = NAMESPACE.iri("Value:amountUsd")
    val Value_currency: IRI = NAMESPACE.iri("Value:currency")
    val Vehicle: IRI = NAMESPACE.iri("Vehicle")
    val Vehicle_buildDate: IRI = NAMESPACE.iri("Vehicle:buildDate")
    val Vehicle_declaredCustoms: IRI = NAMESPACE.iri("Vehicle:declaredCustoms")
    val Vehicle_model: IRI = NAMESPACE.iri("Vehicle:model")
    val Vehicle_operator: IRI = NAMESPACE.iri("Vehicle:operator")
    val Vehicle_owner: IRI = NAMESPACE.iri("Vehicle:owner")
    val Vehicle_registrationDate: IRI = NAMESPACE.iri("Vehicle:registrationDate")
    val Vehicle_registrationNumber: IRI = NAMESPACE.iri("Vehicle:registrationNumber")
    val Vehicle_tripsInvolved: IRI = NAMESPACE.iri("Vehicle:tripsInvolved")
    val Vehicle_type: IRI = NAMESPACE.iri("Vehicle:type")
    val Vessel: IRI = NAMESPACE.iri("Vessel")
    val Vessel_callSign: IRI = NAMESPACE.iri("Vessel:callSign")
    val Vessel_crsNumber: IRI = NAMESPACE.iri("Vessel:crsNumber")
    val Vessel_flag: IRI = NAMESPACE.iri("Vessel:flag")
    val Vessel_grossRegisteredTonnage: IRI = NAMESPACE.iri("Vessel:grossRegisteredTonnage")
    val Vessel_imoNumber: IRI = NAMESPACE.iri("Vessel:imoNumber")
    val Vessel_mmsi: IRI = NAMESPACE.iri("Vessel:mmsi")
    val Vessel_nameChangeDate: IRI = NAMESPACE.iri("Vessel:nameChangeDate")
    val Vessel_navigationArea: IRI = NAMESPACE.iri("Vessel:navigationArea")
    val Vessel_pastFlags: IRI = NAMESPACE.iri("Vessel:pastFlags")
    val Vessel_pastTypes: IRI = NAMESPACE.iri("Vessel:pastTypes")
    val Vessel_registrationPort: IRI = NAMESPACE.iri("Vessel:registrationPort")
    val Vessel_tonnage: IRI = NAMESPACE.iri("Vessel:tonnage")
    val Video: IRI = NAMESPACE.iri("Video")
    val Video_duration: IRI = NAMESPACE.iri("Video:duration")
    val Workbook: IRI = NAMESPACE.iri("Workbook")
}